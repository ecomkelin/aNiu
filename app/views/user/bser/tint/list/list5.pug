each tint in tints
	- let btnTime="btn-secondary";
	if Date.now() - (tint.ctAt).setHours(0, 0, 0, 0) > 3*24*60*60*1000
		-btnTime="btn-danger";

	each tinfir in tint.tinfirs
		-let pdfir = tinfir.pdfir;
		-let tner = tint.tner;
		table.table.table-bordered.text-center(class="tinTab pdfir-"+pdfir._id+" tner-"+tner._id)
			tr.bg-light
				th(colspan=tint.sizes.length+2, width="40%")
					.row
						.col-3.pt-2
							h5 #{pdfir.code}
						.col-3.pt-2
							a(href="/bsTner/"+tner._id) #{tner.nome}
						.col-2.pt-1
							a.btn.btn-link(href="/bsTint/"+tint._id) #{tint.code}
				th(width="2%")
				th(colspan=tint.sizes.length+2)
					.row.text-right
						.col-2.pt-2 染洗日期:
						.col-2.pt-2.text-left #{moment(tint.ctAt).format('MM/DD/YYYY')}
						.col-4
							button.sendBtn.btn(class=btnTime, type="button", id='sendBtn-'+tint._id) 收货
						.col-4
							form(method="post", action="/bsTinChangeSts", enctype="multipart/form-data")
								input(type="hidden", name="tintId", value=tint._id)
								input(type="hidden", name="target", value="bsTintFinish")
								input.btn.btn-warning(type="submit", value="完成")
			tr.bg-light
				th(width="8%") 颜色
				each size in tint.sizes
					-a;
					th #{Conf.sizes[size]}
				th(width="6%") 合计
				th.bg-secondary
				th(width="7%") 颜色
				each size in tint.sizes
					-a;
					th #{Conf.sizes[size]}
				th(width="6%") 合计
			form(id="sendForm-"+tint._id, method="post", action="/bsTintSend", enctype="multipart/form-data")
				input(type="hidden", name="obj[tintId]", value=tint._id)
				input(type="hidden", name="obj[tinfirId]", value=tinfir._id)
				- let k=0;
				- let totquot = 0, totship = 0;
				- let ztotquots = new Array();
				- let ztotships = new Array();
				each tinsec in tinfir.tinsecs
					- let pdsec = tinsec.pdsec;
					- let color = pdsec.color;
					if color.length > 10
						- color = color.substr(0, 8)+' ..';
					tr
						th.bg-light #{color}
						- let ctotquot = 0;
						each size in tint.sizes
							-let quot = '';
							each tinthd in tinsec.tinthds
								if tinthd.size == size
									- quot = tinthd.quot;
									if isNaN(ztotquots[size])
										-ztotquots[size] = quot;
									else
										-ztotquots[size] += quot;
									- ctotquot += quot;
									- totquot += quot;
									- break;
							td #{quot}
						td.text-success #{ctotquot}
						td.bg-secondary
						th.bg-light #{color}
						- let ctotship = 0;
						each size in tint.sizes
							- let taskTinthd = null;
							each tinthd in tinsec.tinthds
								if tinthd.size == size
									- taskTinthd = tinthd;
									- let ship = parseInt(tinthd.ship);
									if isNaN(ztotships[size])
										-ztotships[size] = ship;
									else
										-ztotships[size] += ship;
									- ctotship += ship;
									- totship += ship;
									- break;
							td 
								if taskTinthd
									- k++;
									-let shiping = taskTinthd.quot - taskTinthd.ship;

									if shiping > 0
										-a;
										.row
											.col-3.pt-1
												span.text-info #{taskTinthd.ship}
											.col-9
												input.iptsty2.shiping(id="shiping-"+taskTinthd._id, type="number", name="obj[thds]["+k+"][shiping]", value=shiping)
												input(id="stock-"+taskTinthd._id, type="hidden", value=stock)
												input(type="hidden", name="obj[thds]["+k+"][tinthdId]", value=taskTinthd._id)
												input(type="hidden", name="obj[thds]["+k+"][shiped]", value=taskTinthd.ship)
									else
										span.text-info #{taskTinthd.ship}
						td.text-success #{ctotship}
				tr.text-success
					td
					each size in tint.sizes
						-a;
						td #{ztotquots[size]}
					td: h4 #{totquot}
					th.bg-secondary
					td
					each size in tint.sizes
						-a;
						td.text-success #{ztotships[size]}
					td.text-success
						h4 #{totship}